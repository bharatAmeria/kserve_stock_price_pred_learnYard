# PIPELINE DEFINITION
# Name: end-to-end-ml-pipeline
# Description: Pipeline for data upload, ingestion, preprocessing, and training
components:
  comp-ingest-data:
    executorLabel: exec-ingest-data
  comp-preprocess-data:
    executorLabel: exec-preprocess-data
  comp-train-model:
    executorLabel: exec-train-model
  comp-upload-data:
    executorLabel: exec-upload-data
    outputDefinitions:
      parameters:
        Output:
          parameterType: NUMBER_INTEGER
deploymentSpec:
  executors:
    exec-ingest-data:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - ingest_data
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.13.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef ingest_data():\n\n    import logging\n    from src.pipeline.stage02_data_ingestion\
          \ import DataIngestionPipeline\n\n    try:\n        logging.info(\"Ingestion\
          \ Stage started.\")\n        data_processing= DataIngestionPipeline()\n\
          \        data_processing.main()\n        logging.info(\"Ingestion Stage\
          \ completed.\")\n    except Exception as e:\n        logging.error(f\"Ingestion\
          \ Stage failed: {e}\")\n        raise e\n\n"
        image: bharat9838/kubeflow_pipeline:latest-v2
        resources:
          cpuLimit: 1.0
          memoryLimit: 2.147483648
          resourceCpuLimit: '1'
          resourceMemoryLimit: 2Gi
    exec-preprocess-data:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - preprocess_data
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.13.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef preprocess_data():\n\n    import logging\n    from src.pipeline.stage03_data_processing\
          \ import DataProcessingPipeline\n\n    try:\n        logging.info(\"Preprocessing\
          \ Stage started.\")\n        data_processing= DataProcessingPipeline()\n\
          \        data_processing.main()\n        logging.info(\"Preprocessing Stage\
          \ completed.\")\n    except Exception as e:\n        logging.error(f\"Preprocessing\
          \ Stage failed: {e}\")\n        raise e\n\n"
        image: bharat9838/kubeflow_pipeline:latest-v2
        resources:
          cpuLimit: 2.0
          memoryLimit: 4.294967296
          resourceCpuLimit: '2'
          resourceMemoryLimit: 4Gi
    exec-train-model:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - train_model
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.13.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef train_model():\n    import pandas as pd\n    from src.config\
          \ import CONFIG\n    from src.pipeline.stage04_model_training import ModelPipeline\n\
          \    from src.logger import logging\n\n    try:\n        logging.info(\"\
          Model Training Stage started.\")\n        selection = ModelPipeline()\n\
          \        selection.main()\n        logging.info(\"Model Training Stage completed.\"\
          )\n    except Exception as e:\n        logging.error(f\"Model Training failed:\
          \ {e}\")\n        raise e\n\n"
        image: bharat9838/kubeflow_pipeline:latest-v2
        resources:
          cpuLimit: 4.0
          memoryLimit: 8.589934592
          resourceCpuLimit: '4'
          resourceMemoryLimit: 8Gi
    exec-upload-data:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - upload_data
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.13.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef upload_data() -> int:\n\n    import logging\n    from src.logger\
          \ import logging as custom_logging  # If you have custom logger\n    from\
          \ src.pipeline.stage01_data_upload import DataUploadPipeline\n\n    try:\n\
          \        data_ingestion = DataUploadPipeline()\n        data_ingestion.main()\n\
          \        logging.info(f\"\u2705 Uploaded {len(data_ingestion)} files to\
          \ S3.\")\n        return len(data_ingestion)\n    except Exception as e:\n\
          \        logging.error(f\"\u274C Upload Stage failed: {e}\")\n        raise\
          \ e\n\n"
        image: bharat9838/kubeflow_pipeline:latest-v2
        resources:
          cpuLimit: 1.0
          memoryLimit: 2.147483648
          resourceCpuLimit: '1'
          resourceMemoryLimit: 2Gi
pipelineInfo:
  description: Pipeline for data upload, ingestion, preprocessing, and training
  name: end-to-end-ml-pipeline
root:
  dag:
    tasks:
      ingest-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-ingest-data
        dependentTasks:
        - upload-data
        taskInfo:
          name: ingest-data
      preprocess-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-preprocess-data
        dependentTasks:
        - ingest-data
        taskInfo:
          name: preprocess-data
      train-model:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-model
        dependentTasks:
        - preprocess-data
        taskInfo:
          name: train-model
      upload-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-upload-data
        taskInfo:
          name: upload-data
schemaVersion: 2.1.0
sdkVersion: kfp-2.13.0
